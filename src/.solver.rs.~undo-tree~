(undo-tree-save-format-version . 1)
"435f162b844585ac96ded50feb81ca6b4ef2891e"
[nil nil nil nil (25197 37916 202853 600000) 0 nil]
([nil nil ((9640 . 9645) (t 25197 37867 961667 200000)) nil (25197 37943 694708 100000) 0 nil] [nil nil ((#("up" 0 2 (fontified t face font-lock-variable-name-face)) . -991) (undo-tree-id0 . -2) (undo-tree-id1 . -2) 993 (t 25197 37867 961667 200000)) ((991 . 993)) (25197 37915 333531 400000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -6256) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("u" 0 1 (fontified t)) . -6257) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("t" 0 1 (fontified t)) . -6258) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (fontified t)) . -6259) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 6260 (t 25197 37943 721667 200000)) nil (25197 37986 404213 600000) 0 nil])
([nil nil ((991 . 993)) ((#("lc" 0 2 (fontified t face font-lock-variable-name-face)) . 991) (undo-tree-id2 . -2) (undo-tree-id3 . -2)) (25197 37915 332892 500000) 0 nil])
([nil nil ((#("None" 0 4 (fontified t face font-lock-type-face)) . 9728) (undo-tree-id137 . -4) (undo-tree-id138 . -2) (undo-tree-id139 . -4) 9730 (t 25197 37986 431667 200000)) nil (25197 38262 456556 700000) 0 nil])
nil
([nil nil ((9728 . 9734)) nil (25197 38262 456552 0) 0 nil])
([nil nil ((9733 . 9734)) nil (25197 38262 456550 100000) 0 nil])
([nil nil ((#("true" 0 4 (fontified t face font-lock-keyword-face)) . 9772) (undo-tree-id134 . -4) (undo-tree-id135 . -2) (undo-tree-id136 . -4) 9774) nil (25197 38262 456548 100000) 0 nil])
([nil nil ((9772 . 9773)) nil (25197 38262 456543 300000) 0 nil])
([nil nil ((#("false" 0 5 (fontified t face font-lock-keyword-face)) . 9812) (undo-tree-id131 . -5) (undo-tree-id132 . -2) (undo-tree-id133 . -5) 9814) nil (25197 38262 456541 400000) 0 nil])
([nil nil ((9812 . 9813)) nil (25197 38262 456537 300000) 0 nil])
([nil nil ((#("self.get_lcv(cur)" 0 4 (fontified t face font-lock-keyword-face) 4 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-4-face)) 13 16 (fontified t face (:foreground "#cccccccbcccc") color-identifiers:fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-4-face))) . 9636) (undo-tree-id127 . -17) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -17)) nil (25197 38262 456535 200000) 0 nil])
([nil nil ((#("Some(true)" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face (rainbow-delimiters-depth-5-face))) . 9722) (undo-tree-id124 . -10) (undo-tree-id125 . -5) (undo-tree-id126 . -10) 9726) nil (25197 38262 456529 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9738 . 9739) (nil fontified nil 9738 . 9739) (nil fontified nil 9735 . 9738) (nil fontified nil 9734 . 9735) (nil fontified nil 9733 . 9734) (nil fontified nil 9726 . 9733) (nil fontified nil 9722 . 9726) (9722 . 9739)) nil (25197 38291 66689 0) 0 nil])
([nil nil ((9768 . 9769)) nil (25197 38331 620914 0) 0 nil] [nil nil ((#("Some(false)" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face (rainbow-delimiters-depth-5-face))) . -9768) (undo-tree-id122 . -11) (undo-tree-id123 . -11) 9779) ((9768 . 9779)) (25197 38290 638370 700000) 0 nil])
([nil nil ((#("false" 0 5 (fontified t face font-lock-keyword-face)) . 9774) (undo-tree-id273 . -5) (undo-tree-id274 . -4) (undo-tree-id275 . -5) 9778) nil (25197 38331 620911 100000) 0 nil])
([nil nil ((9768 . 9773)) ((#("!cur." 0 1 (fontified t) 1 4 (fontified t face (:foreground "#cccccccbcccc") color-identifiers:fontified t) 4 5 (fontified t)) . 9768) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5)) (25197 38289 912356 100000) 0 nil])
([nil nil ((9774 . 9783)) nil (25197 38331 620893 0) 0 nil])
([nil nil ((9773 . 9778)) ((#("value" 0 5 (fontified t)) . 9773) (undo-tree-id213 . -5) (undo-tree-id214 . -1) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2)) (25197 38289 177394 800000) 0 nil])
([nil nil ((#("
            let new_val = ;" 0 1 (fontified t) 1 2 (highlight-indent-guides-prop (0 nil t 1 (column (nil) highlight-indent-guides-even-face (top) highlight-indent-guides-top-even-face) ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t face highlight-indent-guides-even-face) 2 3 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 4 5 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 5 6 (highlight-indent-guides-prop (1 nil t 1 (column (nil) highlight-indent-guides-odd-face) ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t face highlight-indent-guides-odd-face) 6 7 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 8 9 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 9 10 (highlight-indent-guides-prop (2 nil t 1 (column (nil) highlight-indent-guides-even-face (top) highlight-indent-guides-top-even-face) ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t face highlight-indent-guides-top-even-face) 10 11 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 11 12 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 12 13 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 13 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 24 (fontified t face (:foreground "#e2bdb6dadc78") color-identifiers:fontified t) 24 27 (fontified t) 27 28 (fontified t)) . 9609) (undo-tree-id277 . -1) (undo-tree-id278 . -28) (undo-tree-id279 . -27) (undo-tree-id280 . -27) (undo-tree-id281 . -27) (undo-tree-id282 . -27) (undo-tree-id283 . -28) (undo-tree-id284 . -27) (undo-tree-id285 . -28) (undo-tree-id286 . -28) (undo-tree-id287 . -28) (undo-tree-id288 . -28) (undo-tree-id289 . -28) (undo-tree-id290 . -28) (undo-tree-id291 . -28) (undo-tree-id292 . -28) (undo-tree-id293 . -28) (undo-tree-id294 . -28) (undo-tree-id295 . -1) (undo-tree-id296 . -2) (undo-tree-id297 . -5) (undo-tree-id298 . -6) (undo-tree-id299 . -9) (undo-tree-id300 . -10) (undo-tree-id301 . -28) (undo-tree-id302 . -28) (undo-tree-id303 . -28) (undo-tree-id304 . -28) (undo-tree-id305 . -28) (undo-tree-id306 . -28) (undo-tree-id307 . -28) (undo-tree-id308 . -28) (undo-tree-id309 . -28) (undo-tree-id310 . -28) (undo-tree-id311 . -28) (undo-tree-id312 . -28) (undo-tree-id313 . -28) (undo-tree-id314 . -28) (t 25197 38331 641667 200000)) nil (25197 38335 724012 500000) 0 nil])
([nil nil ((#("

            let new_val = ;" 0 2 (fontified t) 2 3 (highlight-indent-guides-prop (0 nil t 1 (column (nil) highlight-indent-guides-even-face (top) highlight-indent-guides-top-even-face) ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t face highlight-indent-guides-even-face) 3 4 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 4 5 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 5 6 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 6 7 (highlight-indent-guides-prop (1 nil t 1 (column (nil) highlight-indent-guides-odd-face) ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t face highlight-indent-guides-odd-face) 7 8 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 8 9 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 9 10 (highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 10 11 (highlight-indent-guides-prop (2 nil t 1 (column (nil) highlight-indent-guides-even-face (top) highlight-indent-guides-top-even-face) ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t face highlight-indent-guides-top-even-face) 11 12 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 12 13 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 13 14 (highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 9050 in solver.rs> . #<marker at 11586 in solver.rs>) (#<marker at 8365 in solver.rs> . #<marker at 11804 in solver.rs>) (#<marker at 850 in solver.rs> . #<marker at 11993 in solver.rs>))) fontified t) 14 17 (fontified t face font-lock-keyword-face) 17 18 (fontified t) 18 25 (fontified t face (:foreground "#e2bdb6dadc78") color-identifiers:fontified t) 25 28 (fontified t) 28 29 (fontified t)) . 9608) (undo-tree-id140 . -1) (undo-tree-id141 . -29) (undo-tree-id143 . -28) (undo-tree-id144 . -28) (undo-tree-id145 . -28) (undo-tree-id146 . -28) (undo-tree-id148 . -29) (undo-tree-id150 . -29) (undo-tree-id152 . -29) (undo-tree-id154 . -2) (undo-tree-id156 . -6) (undo-tree-id158 . -10) (undo-tree-id160 . -29) (undo-tree-id162 . -29) (undo-tree-id164 . -29) (undo-tree-id166 . -29) (undo-tree-id168 . -29) (undo-tree-id170 . -29) (undo-tree-id172 . -1) (undo-tree-id174 . -1) (undo-tree-id176 . -1) (undo-tree-id178 . -1) (undo-tree-id180 . -1) (undo-tree-id182 . -1) (undo-tree-id184 . -28) (undo-tree-id186 . -29) (undo-tree-id188 . -29) (undo-tree-id190 . -1) (undo-tree-id192 . -1) (undo-tree-id194 . -1) (undo-tree-id196 . -1) (undo-tree-id198 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -29) (t 25197 38262 481667 200000)) ((9608 . 9637) (t 25197 38268 451667 200000)) (25197 38268 414062 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 9609) (undo-tree-id276 . -1)) nil (25197 38335 723978 300000) 0 nil])
nil
([nil nil ((#("!" 0 1 (fontified t)) . 9739) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (t 25197 38335 771667 200000)) nil (25197 38350 706591 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9744 . 9745) (nil fontified nil 9744 . 9745) (9744 . 9745)) nil (25197 38350 706574 700000) 0 nil])
([nil nil ((#("cur.value" 0 3 (fontified t face (:foreground "#cccccccbcccc") color-identifiers:fontified t) 3 9 (fontified t)) . 9654) (undo-tree-id326 . -9) (undo-tree-id327 . -9) (t 25197 38350 741667 200000)) nil (25197 38416 92703 500000) 0 nil])
([nil nil ((9654 . 9660)) nil (25197 38416 92699 900000) 0 nil])
([nil nil ((9660 . 9670)) nil (25197 38416 92698 300000) 0 nil])
([nil nil ((8915 . 8923) (#("        " 0 8 (fontified nil)) . 8914) (undo-tree-id325 . -8) (8913 . 8923)) nil (25197 38416 92695 900000) 0 nil])
([nil nil ((8923 . 8926)) nil (25197 38416 92692 900000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face (:foreground "#cccccccbcccc") color-identifiers:fontified t)) . -8925) (undo-tree-id323 . -1) (undo-tree-id324 . -1) 8926) nil (25197 38416 92690 600000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -8923) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (#("u" 0 1 (fontified t)) . -8924) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) 8925) nil (25197 38416 92685 200000) 0 nil])
([nil nil ((8923 . 8940)) nil (25197 38416 92667 900000) 0 nil])
([nil nil ((8940 . 8952)) nil (25197 38416 92661 300000) 0 nil])
([nil nil ((#("Some(1)" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-5-face))) . 9728) (undo-tree-id389 . -7) (undo-tree-id390 . -7) (undo-tree-id391 . -6) (undo-tree-id392 . -6) (undo-tree-id393 . -6) (undo-tree-id394 . -6) (undo-tree-id395 . -6) (undo-tree-id396 . -6) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -6) (undo-tree-id400 . -6) (undo-tree-id401 . -6) (undo-tree-id402 . -6) (undo-tree-id403 . -6) (undo-tree-id404 . -6) (undo-tree-id405 . -6) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -6) (undo-tree-id410 . -6) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (undo-tree-id415 . -6) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -7) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) (undo-tree-id441 . -4) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -7) (undo-tree-id457 . -7) (t 25197 38416 131667 200000)) nil (25197 38490 249799 600000) 0 nil])
([nil nil ((9728 . 9729)) nil (25197 38490 249248 700000) 0 nil])
([nil nil ((#("Some(2)" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-5-face))) . 9768) (undo-tree-id361 . -7) (undo-tree-id362 . -7) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -7) (undo-tree-id388 . -4)) nil (25197 38490 249245 600000) 0 nil])
([nil nil ((9768 . 9769)) nil (25197 38490 249224 0) 0 nil])
([nil nil ((#("Some(3)" 0 4 (fontified t face font-lock-type-face) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-5-face))) . 9807) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -7) (undo-tree-id360 . -4)) nil (25197 38490 249219 800000) 0 nil])
([nil nil ((9807 . 9808)) nil (25197 38490 249145 600000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -9774) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -9775) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -9776) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-5-face))) . -9777) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) 9778 (t 25197 38490 291667 200000)) nil (25197 38500 995983 100000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-type-face)) . -9773) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) 9774) nil (25197 38500 995959 300000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -9783) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 9784) nil (25197 38581 537249 600000) 0 nil])
([nil nil ((9774 . 9778) (t 25197 38501 21667 200000)) nil (25197 38590 411271 400000) 0 nil] [nil nil ((9773 . 9777) (t 25197 38501 21667 200000)) ((#("Some" 0 4 (fontified t face font-lock-type-face)) . 9773) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4)) (25197 38581 103869 700000) 0 nil])
([nil nil ((9778 . 9779) (9787 . 9788) (#("(" 0 1 (fontified nil)) . -9787) (9787 . 9788)) nil (25197 38590 411264 700000) 0 nil])
([nil nil ((9777 . 9778)) ((#("k" 0 1 (fontified t face font-lock-type-face)) . 9777) (undo-tree-id522 . -1) (undo-tree-id523 . -1)) (25197 38581 103282 500000) 0 nil])
([nil nil ((#("!" 0 1 (rear-nonsticky t fontified t)) . -9773) (undo-tree-id534 . -1) (undo-tree-id535 . -1) 9774 (t 25197 38590 441667 200000)) nil (25197 38707 675926 600000) 0 nil])
nil
([nil nil ((9733 . 9737) (t 25197 38707 711667 200000)) nil (25197 38738 91582 400000) 0 nil])
([nil current ((9737 . 9738) (9754 . 9755) (#("(" 0 1 (fontified nil)) . -9754) (9754 . 9755)) nil (25197 38738 91574 900000) 0 nil])
nil
